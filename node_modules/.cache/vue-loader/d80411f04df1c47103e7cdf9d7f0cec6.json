{"remainingRequest":"C:\\Users\\KiHyun\\Desktop\\themeforest-7s22eZfo-embryo-angular-material-design-ecommerce-template\\embryo-513\\embryo-vuejs\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\KiHyun\\Desktop\\themeforest-7s22eZfo-embryo-angular-material-design-ecommerce-template\\embryo-513\\embryo-vuejs\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\KiHyun\\Desktop\\themeforest-7s22eZfo-embryo-angular-material-design-ecommerce-template\\embryo-513\\embryo-vuejs\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\KiHyun\\Desktop\\themeforest-7s22eZfo-embryo-angular-material-design-ecommerce-template\\embryo-513\\embryo-vuejs\\src\\views\\AboutUs.vue?vue&type=template&id=5f954f7e&","dependencies":[{"path":"C:\\Users\\KiHyun\\Desktop\\themeforest-7s22eZfo-embryo-angular-material-design-ecommerce-template\\embryo-513\\embryo-vuejs\\src\\views\\AboutUs.vue","mtime":1593927693030},{"path":"C:\\Users\\KiHyun\\Desktop\\themeforest-7s22eZfo-embryo-angular-material-design-ecommerce-template\\embryo-513\\embryo-vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\KiHyun\\Desktop\\themeforest-7s22eZfo-embryo-angular-material-design-ecommerce-template\\embryo-513\\embryo-vuejs\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\KiHyun\\Desktop\\themeforest-7s22eZfo-embryo-angular-material-design-ecommerce-template\\embryo-513\\embryo-vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\KiHyun\\Desktop\\themeforest-7s22eZfo-embryo-angular-material-design-ecommerce-template\\embryo-513\\embryo-vuejs\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}